{"version":3,"sources":["components/PlayerCard.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","styled","div","Container","Header","h4","color","Score","t","PlayerCard","player","score","updated","picture","updatedString","Intl","DateTimeFormat","timeStyle","dateStyle","format","Date","src","alt","style","width","Math","abs","App","useState","players","setPlayers","useEffect","a","axios","data","results","getData","className","map","p","_id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"00BAEA,IAAMA,EAAOC,IAAOC,IAAV,KAUJC,EAAYF,IAAOC,IAAV,KAITE,EAASH,IAAOI,GAAV,KAEC,qBAAGC,OAAqB,WAG/BC,EAAQN,IAAOC,IAAV,KACF,qBAAEM,GAAY,EAAI,QAAU,SAGrB,qBAAGA,GAAa,EAAI,IAAM,QAoB3BC,EAhBI,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,OAAQC,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,QAASN,EAAqB,EAArBA,MAAOO,EAAc,EAAdA,QAC3CC,EAAgB,IAAIC,KAAKC,eAAe,KAAM,CAAEC,UAAW,QAASC,UAAW,UAAWC,OAAO,IAAIC,KAAKR,IAChH,OAAO,cAACZ,EAAD,UACH,eAACG,EAAD,WACI,qBAAKkB,IAAKR,GAAW,4BAA6BS,IAAKZ,EAAQa,MAAO,CAAEC,MAAO,UAC/E,cAACpB,EAAD,CAAQE,MAAOA,EAAf,SAAuBI,IACvB,gCACI,cAACH,EAAD,CAAOC,EAAGG,EAAV,SAAkBc,KAAKC,IAAIf,IAAU,SACrC,iDACmBG,cCZpBa,MApBf,WAAgB,IAAD,EAEiBC,mBAAS,IAF1B,mBAENC,EAFM,KAEGC,EAFH,KAab,OATAC,qBAAU,WAAM,4CACd,8BAAAC,EAAA,sEACyBC,IAAM,eAD/B,gBACUC,EADV,EACUA,KACRJ,EAAWI,EAAKC,SAFlB,4CADc,uBAAC,WAAD,wBAMdC,KACC,IAGD,qBAAKC,UAAU,MAAf,SACGR,EAAQS,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,eAA4BA,GAAXA,EAAEC,WCT5BC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.bc3cdbd5.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nconst Card = styled.div`\n    box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);\n    transition: 0.3s;\n    border-radius: 5px;\n\n    &:hover {\n        box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2);\n    }\n`;\n\nconst Container = styled.div`\n    padding: 16px;\n`;\n\nconst Header = styled.h4`\n    font-weight: 700;\n    color: ${({ color }) => color || \"black\"};\n`;\n\nconst Score = styled.div`\ncolor: ${({t}) => t >= 0 ? \"black\" : \"red\"};\n\n&::before {\n    content: \"${({ t }) => t >= 0 ? \"$\" : \"-$\"}\";\n}\n`;\n\nconst PlayerCard = ({ player, score, updated, color, picture }) => {\n    const updatedString = new Intl.DateTimeFormat(\"en\", { timeStyle: \"short\", dateStyle: \"short\" }).format(new Date(updated));\n    return <Card>\n        <Container>\n            <img src={picture || \"https://picsum.photos/200\"} alt={player} style={{ width: \"100%\" }}></img>\n            <Header color={color}>{player}</Header>\n            <div>\n                <Score t={score}>{Math.abs(score) || \"0.00\"}</Score>\n                <div>\n                    Last Updated: {updatedString}\n                </div>\n            </div>\n        </Container>\n    </Card >\n}\n\nexport default PlayerCard;","import { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nimport PlayerCard from \"./components/PlayerCard\"\n\nfunction App() {\n\n  const [players, setPlayers] = useState([]);\n\n  useEffect(() => {\n    async function getData() {\n      const { data } = await axios(\"/api/scores\");\n      setPlayers(data.results);\n    }\n\n    getData();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      {players.map(p => <PlayerCard key={p._id} {...p} />)}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}