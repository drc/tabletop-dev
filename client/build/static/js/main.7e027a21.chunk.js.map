{"version":3,"sources":["components/Profile.module.css","components/PlayerCard.module.css","components/Scores.module.css","components/Navigation.module.css","utils/colors.js","components/Home.module.css","components/Loading.module.css","components/Player.module.css","components/Home.jsx","components/Loading.jsx","components/PlayerCard.jsx","components/Scores.jsx","components/Navigation.jsx","utils/cache.js","components/Profile.jsx","components/Player.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["module","exports","White","rgb","this","Math","round","toString","Brown","Red","Orange","Yellow","Green","Teal","Blue","Purple","Pink","Grey","Black","pick","Home","className","style","container","console","log","floor","random","length","Loading","useState","rainbow","setRainbow","useEffect","moons","moonCount","setInterval","clearInterval","loading","PlayerCard","player","score","updated","color","picture","updatedString","Intl","DateTimeFormat","timeStyle","dateStyle","format","Date","path","useRouteMatch","link","to","card","profilePic","src","alt","name","white","negative","abs","toFixed","GET_SCORES","gql","Scores","useQuery","error","data","message","scores","map","p","_id","routes","text","Navigation","navbar","r","idx","colorVar","makeVar","cache","InMemoryCache","typePolicies","keyFields","Query","fields","localColor","read","GET_PROFILE","Profile","variables","updatedStr","imageContainer","info","playerName","colorList","hex","label","htmlFor","input","type","value","readOnly","onChange","target","Object","keys","Player","useParams","client","ApolloClient","uri","connectToDevtools","process","App","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7e027a21.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Profile_card__3vRLe\",\"container\":\"Profile_container__5IaRP\",\"playerName\":\"Profile_playerName__3mlQh\",\"info\":\"Profile_info__3Vv7X\",\"label\":\"Profile_label__2HDW9\",\"input\":\"Profile_input__XKK0t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"PlayerCard_card__1zQPo\",\"link\":\"PlayerCard_link__qbX7v\",\"container\":\"PlayerCard_container__2EhGa\",\"name\":\"PlayerCard_name__2J_rd\",\"white\":\"PlayerCard_white__14PJh\",\"profilePic\":\"PlayerCard_profilePic__2ZVWr\",\"negative\":\"PlayerCard_negative__1ApMD\",\"score\":\"PlayerCard_score__3ZXsF\",\"updated\":\"PlayerCard_updated__2Tcfm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Scores_container__3LDHH\",\"loading\":\"Scores_loading__34cey\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navigation_navbar__2IRSB\",\"link\":\"Navigation_link__2Svw_\"};","module.exports = {\n    White: {\n        rgb: [\n            1,\n            1,\n            1\n        ],\n        get rgba() {\n            return `rgba(${this.rgb[0] * 255}, ${this.rgb[1] * 255}, ${this.rgb[2] * 255})`\n        },\n        get hex() {\n            return `#${Math.round(this.rgb[0] * 255).toString(16)}${Math.round(this.rgb[1] * 255).toString(16)}${Math.round(this.rgb[2] * 255).toString(16)}`;\n        }\n    },\n    Brown: {\n        rgb: [\n            0.443,\n            0.231,\n            0.09\n        ],\n        get rgba() {\n            return `rgba(${this.rgb[0] * 255}, ${this.rgb[1] * 255}, ${this.rgb[2] * 255})`\n        },\n        get hex() {\n            return `#${Math.round(this.rgb[0] * 255).toString(16)}${Math.round(this.rgb[1] * 255).toString(16)}${Math.round(this.rgb[2] * 255).toString(16)}`;\n        }\n    },\n    Red: {\n        rgb: [\n            0.856,\n            0.1,\n            0.094\n        ],\n        get rgba() {\n            return `rgba(${this.rgb[0] * 255}, ${this.rgb[1] * 255}, ${this.rgb[2] * 255})`\n        },\n        get hex() {\n            return `#${Math.round(this.rgb[0] * 255).toString(16)}${Math.round(this.rgb[1] * 255).toString(16)}${Math.round(this.rgb[2] * 255).toString(16)}`;\n        }\n    },\n    Orange: {\n        rgb: [\n            0.956, 0.392, 0.113\n        ],\n        get rgba() {\n            return `rgba(${this.rgb[0] * 255}, ${this.rgb[1] * 255}, ${this.rgb[2] * 255})`\n        },\n        get hex() {\n            return `#${Math.round(this.rgb[0] * 255).toString(16)}${Math.round(this.rgb[1] * 255).toString(16)}${Math.round(this.rgb[2] * 255).toString(16)}`;\n        }\n    },\n    Yellow: {\n        rgb: [\n            0.905, 0.898, 0.172\n        ],\n        get rgba() {\n            return `rgba(${this.rgb[0] * 255}, ${this.rgb[1] * 255}, ${this.rgb[2] * 255})`\n        },\n        get hex() {\n            return `#${Math.round(this.rgb[0] * 255).toString(16)}${Math.round(this.rgb[1] * 255).toString(16)}${Math.round(this.rgb[2] * 255).toString(16)}`;\n        }\n    },\n    Green: {\n        rgb: [0.192, 0.701, 0.168],\n        get rgba() {\n            return `rgba(${this.rgb[0] * 255}, ${this.rgb[1] * 255}, ${this.rgb[2] * 255})`\n        },\n        get hex() {\n            return `#${Math.round(this.rgb[0] * 255).toString(16)}${Math.round(this.rgb[1] * 255).toString(16)}${Math.round(this.rgb[2] * 255).toString(16)}`;\n        }\n    },\n    Teal: {\n        rgb: [0.129, 0.694, 0.607],\n        get rgba() {\n            return `rgba(${this.rgb[0] * 255}, ${this.rgb[1] * 255}, ${this.rgb[2] * 255})`\n        },\n        get hex() {\n            return `#${Math.round(this.rgb[0] * 255).toString(16)}${Math.round(this.rgb[1] * 255).toString(16)}${Math.round(this.rgb[2] * 255).toString(16)}`;\n        }\n    },\n    Blue: {\n        rgb: [0.118, 0.53, 1],\n        get rgba() {\n            return `rgba(${this.rgb[0] * 255}, ${this.rgb[1] * 255}, ${this.rgb[2] * 255})`\n        },\n        get hex() {\n            return `#${Math.round(this.rgb[0] * 255).toString(16)}${Math.round(this.rgb[1] * 255).toString(16)}${Math.round(this.rgb[2] * 255).toString(16)}`;\n        }\n    },\n    Purple: {\n        rgb: [0.627, 0.125, 0.941],\n        get rgba() {\n            return `rgba(${this.rgb[0] * 255}, ${this.rgb[1] * 255}, ${this.rgb[2] * 255})`\n        },\n        get hex() {\n            return `#${Math.round(this.rgb[0] * 255).toString(16)}${Math.round(this.rgb[1] * 255).toString(16)}${Math.round(this.rgb[2] * 255).toString(16)}`;\n        }\n    },\n    Pink: {\n        rgb: [0.96, 0.439, 0.807],\n        get rgba() {\n            return `rgba(${this.rgb[0] * 255}, ${this.rgb[1] * 255}, ${this.rgb[2] * 255})`\n        },\n        get hex() {\n            return `#${Math.round(this.rgb[0] * 255).toString(16)}${Math.round(this.rgb[1] * 255).toString(16)}${Math.round(this.rgb[2] * 255).toString(16)}`;\n        }\n    },\n    Grey: {\n        rgb: [0.5, 0.5, 0.5],\n        get rgba() {\n            return `rgba(${this.rgb[0] * 255}, ${this.rgb[1] * 255}, ${this.rgb[2] * 255})`\n        },\n        get hex() {\n            return `#${Math.round(this.rgb[0] * 255).toString(16)}${Math.round(this.rgb[1] * 255).toString(16)}${Math.round(this.rgb[2] * 255).toString(16)}`;\n        }\n    },\n    Black: {\n        rgb: [0.25, 0.25, 0.25],\n        get rgba() {\n            return `rgba(${this.rgb[0] * 255}, ${this.rgb[1] * 255}, ${this.rgb[2] * 255})`\n        },\n        get hex() {\n            return `#${Math.round(this.rgb[0] * 255).toString(16)}${Math.round(this.rgb[1] * 255).toString(16)}${Math.round(this.rgb[2] * 255).toString(16)}`;\n        }\n    }\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Home_container__3-qjB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading\":\"Loading_loading__g2fnR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Player_container__bcYg5\"};","import style from \"./Home.module.css\";\n\nconst cards = `\n.------..------..------..------..------..------..------..------.     .------..------..------..------..------..------.\n|D.--. ||A.--. ||B.--. ||L.--. ||E.--. ||D.--. ||O.--. ||P.--. |.-.  |B.--. ||O.--. ||H.--. ||K.--. ||U.--. ||R.--. |\n| :/\\\\: || (\\\\/) || :(): || :/\\\\: || (\\\\/) || :/\\\\: || :/\\\\: || :/\\\\: ((5)) | :(): || :/\\\\: || :/\\\\: || :/\\\\: || (\\\\/) || :(): |\n| (__) || :\\\\/: || ()() || (__) || :\\\\/: || (__) || :\\\\/: || (__) |'-.-.| ()() || :\\\\/: || (__) || :\\\\/: || :\\\\/: || ()() |\n| '--'D|| '--'A|| '--'B|| '--'L|| '--'E|| '--'D|| '--'O|| '--'P| ((1)) '--'B|| '--'O|| '--'H|| '--'K|| '--'U|| '--'R|\n'------''------''------''------''------''------''------''------'  '-''------''------''------''------''------''------'\n`;\n\nconst drip = `\n▓█████▄  ▄▄▄       ▄▄▄▄    ██▓    ▓█████ ▓█████▄  ▒█████   ██▓███      ▄▄▄▄    ▒█████   ██░ ██  ██ ▄█▀ █    ██  ██▀███  \n▒██▀ ██▌▒████▄    ▓█████▄ ▓██▒    ▓█   ▀ ▒██▀ ██▌▒██▒  ██▒▓██░  ██▒   ▓█████▄ ▒██▒  ██▒▓██░ ██▒ ██▄█▒  ██  ▓██▒▓██ ▒ ██▒\n░██   █▌▒██  ▀█▄  ▒██▒ ▄██▒██░    ▒███   ░██   █▌▒██░  ██▒▓██░ ██▓▒   ▒██▒ ▄██▒██░  ██▒▒██▀▀██░▓███▄░ ▓██  ▒██░▓██ ░▄█ ▒\n░▓█▄   ▌░██▄▄▄▄██ ▒██░█▀  ▒██░    ▒▓█  ▄ ░▓█▄   ▌▒██   ██░▒██▄█▓▒ ▒   ▒██░█▀  ▒██   ██░░▓█ ░██ ▓██ █▄ ▓▓█  ░██░▒██▀▀█▄  \n░▒████▓  ▓█   ▓██▒░▓█  ▀█▓░██████▒░▒████▒░▒████▓ ░ ████▓▒░▒██▒ ░  ░   ░▓█  ▀█▓░ ████▓▒░░▓█▒░██▓▒██▒ █▄▒▒█████▓ ░██▓ ▒██▒\n ▒▒▓  ▒  ▒▒   ▓▒█░░▒▓███▀▒░ ▒░▓  ░░░ ▒░ ░ ▒▒▓  ▒ ░ ▒░▒░▒░ ▒▓▒░ ░  ░   ░▒▓███▀▒░ ▒░▒░▒░  ▒ ░░▒░▒▒ ▒▒ ▓▒░▒▓▒ ▒ ▒ ░ ▒▓ ░▒▓░\n ░ ▒  ▒   ▒   ▒▒ ░▒░▒   ░ ░ ░ ▒  ░ ░ ░  ░ ░ ▒  ▒   ░ ▒ ▒░ ░▒ ░        ▒░▒   ░   ░ ▒ ▒░  ▒ ░▒░ ░░ ░▒ ▒░░░▒░ ░ ░   ░▒ ░ ▒░\n ░ ░  ░   ░   ▒    ░    ░   ░ ░      ░    ░ ░  ░ ░ ░ ░ ▒  ░░           ░    ░ ░ ░ ░ ▒   ░  ░░ ░░ ░░ ░  ░░░ ░ ░   ░░   ░ \n   ░          ░  ░ ░          ░  ░   ░  ░   ░        ░ ░               ░          ░ ░   ░  ░  ░░  ░      ░        ░     \n ░                      ░                 ░                                 ░                                           \n`;\n\nconst plain = `\n     _       _     _          _               _           _     _               \n    | |     | |   | |        | |             | |         | |   | |              \n  __| | __ _| |__ | | ___  __| | ___  _ __   | |__   ___ | |__ | | ___   _ _ __ \n / _' |/ _' | '_ \\\\| |/ _ \\\\/ _' |/ _ \\\\| '_ \\\\  | '_ \\\\ / _ \\\\| '_ \\\\| |/ / | | | '__|\n| (_| | (_| | |_) | |  __/ (_| | (_) | |_) | | |_) | (_) | | | |   <| |_| | |   \n \\\\__,_|\\\\__,_|_.__/|_|\\\\___|\\\\__,_|\\\\___/| .__/  |_.__/ \\\\___/|_| |_|_|\\\\_\\\\\\\\__,_|_|   \n                                     | |                                        \n                                     |_|                                        \n`;\n\nconst pick = [cards, drip, plain];\n\nconst Home = () => {\n  return (\n    <div className={style.container}>\n      <div>dabledop bohkur</div>\n      {console.log(pick[Math.floor(Math.random() * pick.length)])}\n    </div>\n  );\n};\n\nexport default Home;\n","import { useEffect, useState } from \"react\";\nimport style from \"./Loading.module.css\";\n\nconst Loading = () => {\n  const [rainbow, setRainbow] = useState([\"🌑\"]);\n  \n  useEffect(() => {\n    const moons = [\"🌑\", \"🌒\", \"🌓\", \"🌔\", \"🌕\", \"🌖\", \"🌗\", \"🌘\"];\n    let moonCount = 0;\n    let random = setInterval(() => {\n      setRainbow(moons[moonCount % moons.length]);\n      moonCount++;\n    }, 100);\n    return () => clearInterval(random);\n  }, []);\n\n  return <div className={style.loading}>{rainbow}</div>;\n};\n\nexport default Loading;\n","import { Link, useRouteMatch } from \"react-router-dom\";\nimport style from \"./PlayerCard.module.css\";\n\nconst PlayerCard = ({ player, score, updated, color, picture }) => {\n  \n    const updatedString = new Intl.DateTimeFormat(\"en\", {\n      timeStyle: \"short\",\n      dateStyle: \"short\",\n    }).format(new Date(updated));\n  \n\n  const { path } = useRouteMatch();\n\n  return (\n    <Link className={style.link} to={`${path}/${player}`}>\n      <div className={style.card}>\n        <div className={style.container}>\n          <img\n            className={style.profilePic}\n            src={picture || \"https://picsum.photos/200\"}\n            alt={player}\n          ></img>\n          <h2\n            className={`${style.name} ${color === \"White\" ? style.white : \"\"}`}\n            style={{\n              color,\n            }}\n          >\n            {player}\n          </h2>\n          <div>\n            <div\n              className={`${style.score} ${score < 0 ? style.negative : \"\"}`}\n            >\n              {Math.abs(score).toFixed(2)}\n            </div>\n            <div className={style.updated}>Last Updated: {updatedString}</div>\n          </div>\n        </div>\n      </div>\n    </Link>\n  );\n};\n\nexport default PlayerCard;\n","import { gql, useQuery } from \"@apollo/client\";\n\nimport Loading from \"./Loading\";\nimport PlayerCard from \"./PlayerCard\";\nimport style from \"./Scores.module.css\";\n\nconst GET_SCORES = gql`\n  query GetScores {\n    scores {\n      _id\n      player\n      score\n      updated\n      color\n      picture\n    }\n  }\n`;\n\nconst Scores = () => {\n  const { loading, error, data } = useQuery(GET_SCORES);\n\n  if (loading)\n    return (\n      <div className={style.container}>\n        <Loading />\n      </div>\n    );\n\n  if (error) return `Error! ${error.message}`;\n\n  return (\n    <div className={style.container}>\n      {data.scores.map((p) => (\n        <PlayerCard key={p._id} {...p} />\n      ))}\n    </div>\n  );\n};\n\nexport default Scores;\n","import { NavLink } from \"react-router-dom\";\nimport style from \"./Navigation.module.css\";\n\nconst routes = [\n  {\n    to: \"/\",\n    text: \"Home\",\n  },\n  {\n    to: \"/scores\",\n    text: \"Scores\",\n  },\n];\n\nconst Navigation = () => {\n  return (\n    <nav className={style.navbar}>\n      {routes.map((r,idx) => (\n        <NavLink key={idx} to={r.to} className={style.link}>\n          {r.text}\n        </NavLink>\n      ))}\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import { InMemoryCache, makeVar } from \"@apollo/client\";\n\nexport const colorVar = makeVar(\"Green\");\n\nexport const cache = new InMemoryCache({\n    typePolicies: {\n        Scores: { keyFields: [\"_id\"] },\n        Query: {\n            fields: {\n                localColor: {\n                    read() {\n                        return colorVar();\n                    }\n                }\n            }\n        }\n    },\n});","import { gql, useQuery } from \"@apollo/client\";\n\nimport style from \"./Profile.module.css\";\nimport Loading from \"./Loading\";\nimport colorList from \"../utils/colors\";\n\nimport { colorVar } from \"../utils/cache\";\n\nconst GET_PROFILE = gql`\n  query GetProfile($player: String!) {\n    score(player: $player) {\n      player\n      picture\n      color\n      score\n      updated\n    }\n    localColor @client\n  }\n`;\n\nconst Profile = ({ player }) => {\n  const { loading, error, data } = useQuery(GET_PROFILE, {\n    variables: { player },\n  });\n\n  if (loading) {\n    return <Loading />;\n  }\n\n  if (error) {\n    return `Error!!! ${error.message}`;\n  }\n\n  console.log(data);\n\n  const updatedStr = new Intl.DateTimeFormat(\"en\", {\n    timeStyle: \"short\",\n    dateStyle: \"short\",\n  }).format(new Date(data.score.updated));\n\n  return (\n    <div className={style.card}>\n      <div className={style.container}>\n        <div className={style.imageContainer}>\n          <img\n            className={style.profilePic}\n            src={data.score.picture || \"https://picsum.photos/200\"}\n            alt={data.score.player}\n          />\n        </div>\n        <div className={style.info}>\n          <div\n            className={style.playerName}\n            style={{ color: colorList[data.localColor].hex }}\n          >\n            {data.score.player}\n          </div>\n          <div>\n            <label className={style.label} htmlFor=\"score\">\n              Score\n            </label>\n            <input\n              className={style.input}\n              type=\"number\"\n              value={data.score.score}\n              readOnly\n            />\n          </div>\n          <div>\n            <label className={style.label} htmlFor=\"color\">\n              Last Color Played as\n            </label>\n            <select\n              className={style.input}\n              value={colorVar()}\n              onChange={({ target: { value } }) => {\n                colorVar(value);\n              }}\n            >\n              {Object.keys(colorList).map((color) => (\n                <option key={color} value={color}>\n                  {color}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div>\n            <label className={style.label} htmlFor=\"updated\">\n              Last Updated\n            </label>\n            {updatedStr}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n","import { useParams } from \"react-router-dom\";\nimport style from \"./Player.module.css\";\nimport Profile from \"./Profile\";\n\nconst Player = () => {\n  let { player } = useParams();\n\n  return (\n    <div className={style.container}>\n      <Profile {...{ player }} />\n    </div>\n  );\n};\n\nexport default Player;\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ApolloProvider, ApolloClient } from \"@apollo/client\";\n\nimport Home from \"./components/Home\";\nimport Scores from \"./components/Scores\";\nimport Navigation from \"./components/Navigation\";\nimport Player from \"./components/Player\";\nimport { cache } from \"./utils/cache\";\n\nconst client = new ApolloClient({\n  uri:\n    process.env.NODE_ENV === \"production\"\n      ? \"https://dabledop.herokuapp.com/graphql\"\n      : \"http://localhost:5000/graphql\",\n  connectToDevtools: true,\n  cache,\n});\n\nconsole.log(process.env.NODE_ENV);\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <Navigation />\n\n        <Switch>\n          <Route exact path=\"/scores\" component={Scores} />\n          <Route path={`/scores/:player`} component={Player} />\n          <Route path=\"/\" component={Home} />\n        </Switch>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}